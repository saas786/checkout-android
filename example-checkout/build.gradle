apply plugin: 'com.android.application'
apply plugin: 'com.browserstack.gradle'

assemble.dependsOn('lint')

android {

    lintOptions {
        abortOnError true
        checkDependencies true
        ignoreWarnings true
    }

    compileOptions {
        sourceCompatibility rootProject.javaCompatVersion
        targetCompatibility rootProject.javaCompatVersion
    }

    compileSdkVersion rootProject.compileSdkVersion

    defaultConfig {
        applicationId 'com.payoneer.checkout.examplecheckout'
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode rootProject.versionCode
        versionName rootProject.versionName
        testInstrumentationRunner 'androidx.test.runner.AndroidJUnitRunner'
    }

    signingConfigs {
        release {
            storeFile file("${rootProject.playstoreStoreFile}")
            storePassword "${rootProject.playstoreStorePassword}"
            keyAlias "${rootProject.playstoreKeyAlias}"
            keyPassword "${rootProject.playstoreKeyPassword}"
        }
    }

    // Product flavor is required in order to upload both
    // the ExampleCheckout and ExampleShop app to Browserstack
    flavorDimensions "version"
    productFlavors {
        ExampleCheckout {
            dimension "version"
        }
    }

    buildTypes {
        debug {
            buildConfigField 'String', 'merchantCode', "\"${rootProject.merchantCode}\""
            buildConfigField 'String', 'merchantPaymentToken', "\"${rootProject.merchantPaymentToken}\""
            buildConfigField 'String', 'paymentApiListUrl', "\"${rootProject.paymentApiListUrl}\""

            testVariants.all { testVariant ->
                testVariant.outputs.all { output ->
                    outputFileName = "ExampleCheckout-${testVariant.buildType.name}_${getBranchLabel()}-androidTest.apk"
                }
            }
        }
        if (signingConfigs.release.storeFile.exists()) {
            release {
                minifyEnabled true
                signingConfig signingConfigs.release
                proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            }
        }
        applicationVariants.all { variant ->
            variant.outputs.all {
                outputFileName = "ExampleCheckout-${variant.buildType.name}_${getBranchLabel()}.apk"
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "com.google.android.material:material:${rootProject.androidMaterialVersion}"
    implementation "androidx.test.espresso:espresso-idling-resource:${rootProject.androidxTestEspressoVersion}@aar"
    implementation project(":checkout")
    implementation project(":network-service-googlepay")

    androidTestImplementation project(":shared-test")
    androidTestImplementation "androidx.test:runner:${rootProject.androidxTestRunnerVersion}"
    androidTestImplementation "androidx.test:rules:${rootProject.androidxTestRulesVersion}"
    androidTestImplementation "androidx.test.ext:junit:${rootProject.androidxTestJunitVersion}"
    androidTestImplementation "androidx.test.uiautomator:uiautomator:${rootProject.androidxTestUIAutomatorVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-core:${rootProject.androidxTestEspressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-intents:${rootProject.androidxTestEspressoVersion}"
    androidTestImplementation "androidx.test.espresso:espresso-contrib:${rootProject.androidxTestEspressoVersion}"
}

apply from: 'browserstack.gradle'

